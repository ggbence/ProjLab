//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using MySql.Data.MySqlClient;

public class ManagerDaO : DaO
{
	internal bool changeRole(int users_id, int jogkor_id)
	{
        // Query string 
        string strSQL = "UPDATE USERS SET jogkor_id=@_jogkor WHERE users_id=@_id";

        // Add query text
        MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();

        // Add parameter
        cmd.Parameters.AddWithValue("@_id", users_id);
        cmd.Parameters.AddWithValue("@_jogkor", jogkor_id);
        
        // Execute query
        if (cmd.ExecuteNonQuery() == 1)
        {
            return true;
        }
        return false;
	}

	internal bool deleteUserdata(int users_id)
	{
        // Query string 
        string strSQL = "DELETE FROM USERS WHERE users_id=@_id";

        // Add query text
        MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();

        // Add parameter
        cmd.Parameters.AddWithValue("@_id", users_id);

        // Execute query
        if (cmd.ExecuteNonQuery() == 1)
        {
            return true;
        }
        return false;
	}

	internal List<KeyValuePair<int, string>> getAllRole()
	{
        MySqlDataReader rdr = null;

        var result = new List<KeyValuePair<int, string>>();

        try
        {

            string stm = "SELECT jogkor_id, jogkor_nev FROM JOGKOR ORDER BY jogkor_id ASC";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                int key = rdr.GetInt32(0);
                string value = rdr.GetString(1);

                result.Add(new KeyValuePair<int, string>(key, value));
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
	}


    internal List<User> getUsers()
    {
        MySqlDataReader rdr = null;

        var result = new List<User>();

        try
        {
            
            string stm = "SELECT users_id, users_nev, users_email, jogkor_id, aktiv, " +
             "koncertre_jar, users_password FROM USERS";
           
            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);
            
            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                int users_id = rdr.GetInt32(0);
                string users_email = rdr.GetString(2);
                string users_nev = rdr.GetString(1);
                int jogkor_id = rdr.GetInt32(3);
                string users_password = rdr.GetString(6);
                bool aktiv = rdr.GetBoolean(4);
                bool koncertre_jar = rdr.GetBoolean(5);

                result.Add(new User(users_id, users_nev, users_email, jogkor_id, users_password, aktiv, koncertre_jar));
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;






        
    }

    internal bool newInstruments(List<KeyValuePair<string, int>> hangszerek) 
    {
        // uj hangszerek irasa

        // Query string 
        string strSQL = "INSERT INTO HANGSZER (hangszer_nev, hangszertipus_id) VALUES (@_hangszernev, @_hangszertipus_id); ";

        // Add query text
        MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();

        bool ok = true;

        for (int i = 0; i < hangszerek.Count; i++)
        {
            cmd.Parameters.AddWithValue("@_hangszernev", hangszerek[i].Key);
            cmd.Parameters.AddWithValue("@_hangszertipus_id", hangszerek[i].Value);
            // Execute query

            if (cmd.ExecuteNonQuery() != 1)
            {
                ok = false;
            }
        }

        return ok;
        
    }


    internal bool newInstrumentTypes(List<String> tipuslista)
    {
        // hangszertipusok adatbazisba irasa

        // Query string 
        string strSQL = "INSERT INTO HANGSZERTIPUS (hangszertipus_nev) VALUES (@_hangszertipus_nev); ";

        // Add query text
        MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();

        bool ok = true;

        for (int i = 0; i < tipuslista.Count; i++)
        {
            cmd.Parameters.AddWithValue("@_hangszertipus_nev", tipuslista[i]);
            // Execute query

            if (cmd.ExecuteNonQuery() != 1)
            {
                ok = false;
            }
        }

        return ok;
    }
}


