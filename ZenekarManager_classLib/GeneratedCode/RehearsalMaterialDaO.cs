//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using MySql.Data.MySqlClient;
 
public class RehearsalMaterialDaO : DaO
{
	internal bool activate(int probaanyag_id)
	{
		try
        {

            // Query string 
            string strSQL = "UPDATE PROBAANYAG SET probaanyag_aktiv=true WHERE probaanyag_id=@_probaanyag_id";

            // Add query text
            MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            // Add parameter
            cmd.Parameters.AddWithValue("@_probaanyag_id", probaanyag_id);
        
            // Execute query
            if (cmd.ExecuteNonQuery() == 1)
            {
                return true;
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("MySQL error. Number: " + ex.Number);
        }
        
        return false;
	}



	internal bool addZenesz(int probaanyag_id, int users_id, int szolam_id)
	{
		
        try
        {
            // Query string 
            string strSQL = "INSERT INTO PROBA_ZENESZ (users_id, szolam_id, probaanyag_id) " +
                "VALUES (@_users_id, @_szolam_id, @_probaanyag_id); ";

            // Add query text
            MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            // Add parameter
            cmd.Parameters.AddWithValue("@_users_id", users_id);
            cmd.Parameters.AddWithValue("@_szolam_id", szolam_id);
            cmd.Parameters.AddWithValue("@_koncertanyag_id", probaanyag_id);

            // Execute query
            if (cmd.ExecuteNonQuery() != 1)
            {
                return false;
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("MySQL error. Number: " + ex.Number);
            return false;
        }

        return true;
	}


	internal int writeRehearsalMaterialdata(int probaanyag_id, bool probaanyag_aktiv, int tetel_id, List<KeyValuePair<int, int>> zeneszek)
	{
		
        MySqlDataReader rdr = null;
        int materialid = -1;

        try
        {
            // koncertanyag tabla adatainak irasa
            // Query string 
            string strSQL = "INSERT INTO PROBAANYAG (tetel_id, probaanyag_aktiv) "+ 
                "VALUES (@_tetel_id, @_probaanyag_aktiv); ";

            // Add query text
            MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            // Add parameter
            cmd.Parameters.AddWithValue("@_tetel_id", tetel_id);
            cmd.Parameters.AddWithValue("@_probaanyag_aktiv", probaanyag_aktiv);
            
            // Execute query
            if (cmd.ExecuteNonQuery() != 1)
            {
                return materialid;
            }


            // adatbazisba felvett koncertanyag ID-janak lekerdezese

            string stm = "SELECT probaanyag_id FROM PROBAANYAG WHERE probaanyag_aktiv=@_probaanyag_aktiv AND tetel_id=@_tetel_id;";

            cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();

            cmd.Parameters.AddWithValue("@_probaanyag_aktiv", probaanyag_aktiv);
            cmd.Parameters.AddWithValue("@_tetel_id", tetel_id);

            // Execute query
            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                materialid = rdr.GetInt32(0);
            }



            // koncert_zenesz tabla adatainak irasa
            // Query string 
            strSQL = "INSERT INTO PROBA_ZENESZ (users_id, szolam_id, probaanyag_id) " +
                "VALUES (@_users_id, @_szolam_id, @_probaanyag_id);";

            // Add query text
            cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            for (int i = 0; i < zeneszek.Count; i++)
            {
                // Add parameter
                cmd.Parameters.AddWithValue("@_users_id", zeneszek[i].Key);
                cmd.Parameters.AddWithValue("@_szolam_id", zeneszek[i].Value);
                cmd.Parameters.AddWithValue("@_probaanyag_id", materialid);
                // Execute query
                cmd.ExecuteNonQuery();
            }
           
        }
        catch (MySqlException ex)
        {
            Console.WriteLine("MySQL error. Number: " + ex.Number);
            return -1;
        }

        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        return materialid;

	}


	internal bool deactivate(int probaanyag_id)
	{
		try
        {

            // Query string 
            string strSQL = "UPDATE PROBAANYAG SET probaanyag_aktiv=false WHERE probaanyag_id=@_probaanyag_id";

            // Add query text
            MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            // Add parameter
            cmd.Parameters.AddWithValue("@_probaanyag_id", probaanyag_id);
        
            // Execute query
            if (cmd.ExecuteNonQuery() == 1)
            {
                return true;
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("MySQL error. Number: " + ex.Number);
        }
        
        return false;
	}


	internal bool deleteZenesz(int probaanyag_id, int users_id, int szolam_id)
	{
		
        try
        {
            // Query string 
            string strSQL = "DELETE FROM PROBA_ZENESZ WHERE probaanyag_id=@_probaanyag_id AND users_id=@_users_id AND szolam_id=@_szolam_id";

            // Add query text
            MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            // Add parameter
            cmd.Parameters.AddWithValue("@_probaanyag_id", probaanyag_id);
            cmd.Parameters.AddWithValue("@_users_id", users_id);
            cmd.Parameters.AddWithValue("@_szolam_id", szolam_id);

            // Execute query
            if (cmd.ExecuteNonQuery() != 1)
            {
                return false;
            }

            return true;
        }
        catch (MySqlException ex)
        {
            Console.WriteLine("MySQL error. Number: " + ex.Number);
        }

        return false;

	}


	internal List<KeyValuePair<int, int>> getZeneszek(int probaanyag_id)
	{
		
        MySqlDataReader rdr = null;

        var result = new List<KeyValuePair<int, int>>();

        try
        {

            // user adatok lekerdezese
            string stm = "SELECT users_id, szolam_id FROM PROBA_ZENESZ WHERE probaanyag_id=@_probaanyag_id";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            cmd.Parameters.AddWithValue("@_probaanyag_id", probaanyag_id);

            rdr = cmd.ExecuteReader();


            while (rdr.Read())
            {
                result.Add(new KeyValuePair<int, int>(rdr.GetInt32(0), rdr.GetInt32(1)));
            }


        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
	}


	internal bool modifyRehearsalMaterialdata(int probaanyag_id, bool probaanyag_aktiv, int tetel_id, List<KeyValuePair<int, int>> zeneszek)
	{

        try
        {

            // probaanyag adatok frissitese az adatbazisban

            string strSQL = "UPDATE PROBAANYAG SET probaanyag_aktiv=@_probaanyag_aktiv, tetel_id=@_tetel_id " +
                "WHERE probaanyag_id=@_probaanyag_id";

            // Add query text
            MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            // Add parameter
            cmd.Parameters.AddWithValue("@_probaanyag_aktiv", probaanyag_aktiv);
            cmd.Parameters.AddWithValue("@_tetel_id", tetel_id);
            cmd.Parameters.AddWithValue("@_probaanyag_id", probaanyag_id);

            // Execute query
            if (cmd.ExecuteNonQuery() != 1)
            {
                return false;
            }



            // koncert zeneszek torlese az adatbazisbol, hogy aztan a frissitett listat be lehessen irni

            strSQL = "DELETE FROM PROBA_ZENESZ WHERE probaanyag_id=@_probaanyag_id";

            // Add query text
            cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            // Add parameter
            cmd.Parameters.AddWithValue("@_probaanyag_id", probaanyag_id);

            // Execute query
            if (cmd.ExecuteNonQuery() != 1)
            {
                return false;
            }


            // koncert_zenesz tabla adatainak irasa
            // Query string 
            strSQL = "INSERT INTO PROBA_ZENESZ (users_id, szolam_id, probaanyag_id) " +
                "VALUES (@_users_id, @_szolam_id, @_probaanyag_id); ";

            // Add query text
            cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            for (int i = 0; i < zeneszek.Count; i++)
            {
                // Add parameter
                cmd.Parameters.AddWithValue("@_users_id", zeneszek[i].Key);
                cmd.Parameters.AddWithValue("@_szolam_id", zeneszek[i].Value);
                cmd.Parameters.AddWithValue("@_probaanyag_id", probaanyag_id);
                // Execute query
                cmd.ExecuteNonQuery();
            }

            return true;
        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }

        return false;
	}


	internal int[] readRehearsalMaterialdata(object probaanyag_id, ref List<KeyValuePair<int, int>> zeneszek)
	{
		
        MySqlDataReader rdr = null;

        var result = new int[3];

        try
        {

            // probaanyag adatok lekerdezese

            string stm = "SELECT probaanyag_id, tetel_id, probaanyag_aktiv " +
             "FROM PROBAANYAG WHERE probaanyag_id=@_probaanyag_id";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            cmd.Parameters.AddWithValue("@_probaanyag_id", probaanyag_id);

            rdr = cmd.ExecuteReader();



            while (rdr.Read())
            {
                for (int i = 0; i < 2; i++)
                {
                    result[i] = rdr.GetInt32(i);
                }
                result[2] = (rdr.GetBoolean(2)==true?1:0);
            }



            // szolamzeneszek listajanak lekerdezese

            var szolamzeneszek = new List<KeyValuePair<int, int>>();

            stm = "SELECT users_id, szolam_id FROM PROBA_ZENESZ WHERE probaanyag_id=@_probaanyag_id;";

            cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            cmd.Parameters.AddWithValue("@_probaanyag_id", probaanyag_id);

            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                int user = rdr.GetInt32(0);
                int szolam = rdr.GetInt32(1);

                szolamzeneszek.Add(new KeyValuePair<int, int>(user, szolam));
            }

            // szolamzeneszek listajanak atadasa parameterben
            zeneszek = szolamzeneszek;


        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
	}


}

