//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Security.Cryptography;

public class User
{
    protected int users_id;
    public int Users_id
    {
        get { return users_id; }
        set { users_id = value; }
    }


    protected string users_email;
    public string Users_email
    {
        get { return users_email; }
        set { users_email = value; }
    }

    protected int jogkor_id;
    public int Jogkor_id
    {
        get { return jogkor_id; }
        set { jogkor_id = value; }
    }

    protected bool aktiv;
    public bool Aktiv
    {
        get { return aktiv; }
        set { aktiv = value; }
    }


    protected bool koncertre_jar;
    public bool Koncertre_jar
    {
        get { return koncertre_jar; }
        set { koncertre_jar = value; }
    }

   protected string users_password;
    public string Users_password
    {
        get { return users_password; }
        set { users_password = value; }
    }


    protected string users_nev;
    public string Users_nev
    {
        get { return users_nev; }
        set { users_nev = value; }
    }


    protected List<KeyValuePair<int, string>> hangszerek;
   
    public List<KeyValuePair<int, string>> Hangszerek
    {
        get { return hangszerek; }
        set { hangszerek = value; }
    } 


    protected UserDaO userDaO;
	

    public User()
    {
        userDaO = new UserDaO();
        aktiv = true;
        koncertre_jar = true;
        hangszerek = new List<KeyValuePair<int, string>>();
        
    }

    public User(int users_id, string users_nev, string users_email, int jogkor_id, string users_password, bool aktiv, bool koncertre_jar)
    {
        userDaO = new UserDaO();

        this.users_id = users_id;
        this.users_email = users_email;
        this.users_nev = users_nev;
        this.jogkor_id = jogkor_id;
        this.users_password = users_password;
        this.aktiv = aktiv;
        this.koncertre_jar = koncertre_jar;
    }


    public string getHash(string data)
    {
        //create new instance of md5
        SHA1 sha1 = SHA1.Create();

        //convert the input text to array of bytes
        byte[] hashData = sha1.ComputeHash(Encoding.Default.GetBytes(data));

        //create new instance of StringBuilder to save hashed data
        StringBuilder returnValue = new StringBuilder();

        //loop for each byte and add it to StringBuilder
        for (int i = 0; i < hashData.Length; i++)
        {
            returnValue.Append(hashData[i].ToString());
        }

        // return hexadecimal string
        return returnValue.ToString();
    }


	public bool profileModify()
	{
        return userDaO.modifyUserdata(users_id, users_nev, users_email, jogkor_id, aktiv, koncertre_jar, users_password, hangszerek);

	}


	public bool createProfile()
	{

        return userDaO.writeUserdata(users_nev, users_email, jogkor_id, aktiv, koncertre_jar, users_password, hangszerek);
        
	}


    public bool readProfile(string email)
    {
        string []data;
        data = userDaO.readUserdata(email, this.hangszerek);
        try
        {
            this.users_id = Convert.ToInt32(data[0]);
            this.users_nev = data[1];
            this.users_email = data[2];
            this.jogkor_id = Convert.ToInt32(data[3]);
            this.aktiv = (data[4] == "True" ? true : false);
            this.koncertre_jar = (data[5] == "True" ? true : false);
            this.users_password = data[6];
            // hangszerek listajat kozvetlenul parameterkent kapta meg
            return true;

        }
        catch (Exception ex)
        {
            Console.WriteLine("Error " + ex.Message.ToString());
            return false;
        }

        
    }


    public List<Message> getMessages()
    {
        return userDaO.getAllMsg(users_id);
    }


    public Message readMessage(int uzenet_id)
    {
        return userDaO.getMsg(uzenet_id);
    }
   

    public bool sendMessage(Message msg)
    {
        return userDaO.sendMsg(msg.Kuldo, msg.Uzenet, msg.Datum, msg.Ervenyesseg, msg.Cimzett);
    }


    public bool deleteMessage(int uzenet_id)
    {
        return userDaO.deleteMsg(uzenet_id, users_id);
    }

    // hangszer_id, hangszer_nev, hangszertipus_id
    public List<KeyValuePair<int, KeyValuePair<string, int>>> getInstruments()
    {
        // hangszer_id, hangszer_nev, hangszertipus_id
        return userDaO.getAllInstrument();
    }


    public List<KeyValuePair<int, string>> getInstrumentTypes()
    {
        return userDaO.getAllInstrumentType();
    }


    public List<Part> getPaperList()
    {

        var papers = new List<int>();
        var result = new List<Part>();

        papers = userDaO.getPaperListdata(hangszerek);

        for (int i = 0; i < papers.Count; i++)
        {
            var part = new Part();
            part.readPart(papers[i]);
            result.Add(part);
        }

        return result;
    }
}

