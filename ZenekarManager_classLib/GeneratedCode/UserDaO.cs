//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using MySql.Data.MySqlClient;

public class UserDaO : DaO
{
	internal bool writeUserdata(string users_nev, string users_email, int jogkor_id,
        bool aktiv, bool koncertre_jar, string users_password, List< KeyValuePair<int, string> > hangszerek)
	{
        
        MySqlDataReader rdr = null;
        int userid = 0;

        try
        {
            // Query string 
            string strSQL = "INSERT INTO USERS (users_nev, users_email, jogkor_id, aktiv, " +
            "koncertre_jar, users_password) VALUES (@nev, @email, @jogkor, @_aktiv, " +
            "@_koncertre_jar, @password); ";

            // Add query text
            MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            // Add parameter
            cmd.Parameters.AddWithValue("@nev", users_nev.ToString());
            cmd.Parameters.AddWithValue("@email", users_email.ToString());
            cmd.Parameters.AddWithValue("@jogkor", jogkor_id.ToString());
            cmd.Parameters.AddWithValue("@_aktiv", aktiv.ToString());
            cmd.Parameters.AddWithValue("@_koncertre_jar", koncertre_jar.ToString());
            cmd.Parameters.AddWithValue("@password", users_password.ToString());

            // Execute query
            if (cmd.ExecuteNonQuery() != 1)
            {
                return false;
            }



            // adatbazisba felvett user ID-janak lekerdezese

            string stm = "SELECT users_id FROM USERS where users_email=@email";

            cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            cmd.Parameters.AddWithValue("@email", users_email);

            rdr = cmd.ExecuteReader();
            
            while (rdr.Read())
            {
               userid = rdr.GetInt32(0);
            }

            
            // user hangszereinek adatbazisba irasa

            // Query string 
            strSQL = "INSERT INTO USERS_HANGSZER (users_id, hangszer_id) VALUES (@usersid, @hangszerid); ";

            // Add query text
            cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            
            for (int i = 0; i < hangszerek.Count; i++)
            {
                cmd.Parameters.AddWithValue("@usersid", userid);
                cmd.Parameters.AddWithValue("@hangszerid", hangszerek[i].Key);
                // Execute query
               
                if (cmd.ExecuteNonQuery() != 1)
                
                {
                    return false;
                }
            }


            return true;
        }
        catch (MySqlException ex)
        {
            Console.WriteLine("MySQL error. Number: " + ex.Number);
            return false;
        }

        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }
	}


	internal string[] readUserdata(string email, ref List<KeyValuePair<int, string>> hangszerek)
	{
       
        MySqlDataReader rdr = null;

        var result = new string[8];

        try
        {
            
            // user adatok lekerdezese

            string stm = "SELECT users_id, users_nev, users_email, jogkor_id, aktiv, " +
             "koncertre_jar, users_password FROM USERS where users_email=@email";
           
            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            cmd.Parameters.AddWithValue("@email", email);

            rdr = cmd.ExecuteReader();

            

            while (rdr.Read())
            {
                for (int i = 0; i < 7; i++)
                {
                    result[i] = rdr.GetString(i);
                }
            }

            rdr.Close();

            //hangszerek listajanak lekerdezese

            var hangszerei = new List<KeyValuePair<int, string>>();

            stm = "SELECT H.hangszer_id, H.hangszer_nev FROM HANGSZER H INNER JOIN USERS_HANGSZER UH ON H.hangszer_id=UH.hangszer_id " 
                + "WHERE UH.users_id=@users_id ORDER BY H.hangszer_id ASC";

            cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            cmd.Parameters.AddWithValue("@users_id", result[0]);

            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                int key = rdr.GetInt32(0);
                string value = rdr.GetString(1);

                hangszerei.Add(new KeyValuePair<int, string>(key, value));
            }

            // user hangszerek listajanak atadasa parameterben
            hangszerek = hangszerei;
       

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
	}


	internal bool modifyUserdata(int users_id, string users_nev, string users_email, int jogkor_id, 
        bool aktiv, bool koncertre_jar, string users_password, List<KeyValuePair<int, string>> hangszerek)
	{
        // user adatok frissitese az adatbazisban
        try
        {
        string strSQL = "UPDATE USERS SET users_nev=@_nev, " +
        "users_email=@_email, jogkor_id=@_jogkor, aktiv=@_aktiv, " +
        "koncertre_jar=@_koncertre_jar, users_password=@_password WHERE users_id=@_id";

        // Add query text
        MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();

        // Add parameter
        cmd.Parameters.AddWithValue("@_id", users_id);
        cmd.Parameters.AddWithValue("@_nev", users_nev);
        cmd.Parameters.AddWithValue("@_email", users_email);
        cmd.Parameters.AddWithValue("@_jogkor", jogkor_id);
        cmd.Parameters.AddWithValue("@_aktiv", aktiv);
        cmd.Parameters.AddWithValue("@_koncertre_jar", koncertre_jar);
        cmd.Parameters.AddWithValue("@_password", users_password);
            cmd.ExecuteNonQuery();
        // Execute query
            /*if (cmd.ExecuteNonQuery() != 1)
        {
            return false;
            }*/


        // user hangszereinek torlese az adatbazisbol, hogy aztan a frissitett listat be lehessen irni

        strSQL = "DELETE FROM USERS_HANGSZER WHERE users_id=@_id";

        // Add query text
        cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();

        // Add parameter
        cmd.Parameters.AddWithValue("@_id", users_id);

        // Execute query
            /*if (cmd.ExecuteNonQuery() != 1)
        {
            return false;
            }*/
            cmd.ExecuteNonQuery();

        // user hangszereinek adatbazisba irasa

        // Query string 
        strSQL = "INSERT INTO USERS_HANGSZER (users_id, hangszer_id) VALUES (@usersid, @hangszerid); ";

        // Add query text
        cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();


        for (int i = 0; i < hangszerek.Count; i++)
        {
                cmd.Parameters.Clear();
            cmd.Parameters.AddWithValue("@usersid", users_id);
            cmd.Parameters.AddWithValue("@hangszerid", hangszerek[i].Key);
            // Execute query

            if (cmd.ExecuteNonQuery() != 1)
            {
                return false;
            }
        }
        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());
            return false;
        }


        return true;


	}


    internal bool deleteMsg(int uzenet_id, int users_id)
    {
        // Query string 
        string strSQL = "DELETE FROM FOGADOTT_UZENET WHERE users_id=@_users_id AND uzenet_id=@_uzenet_id";

        // Add query text
        MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();

        // Add parameter
        cmd.Parameters.AddWithValue("@_users_id", users_id);
        cmd.Parameters.AddWithValue("@_uzenet_id", uzenet_id);

        // Execute query
        if (cmd.ExecuteNonQuery() == 1)
        {
            return true;
        }
        return false;

    }


    internal List<Message> getAllMsg(int cimzett)
    {

        MySqlDataReader rdr = null;

        var msg_ids = new List<int>();

        try
        {

            string stm = "SELECT uzenet_id FROM FOGADOTT_UZENET where users_id=@_users_id";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            cmd.Parameters.AddWithValue("@_users_id", cimzett);

            rdr = cmd.ExecuteReader();



            while (rdr.Read())
            {
                msg_ids.Add(rdr.GetInt32(0));
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        

       rdr = null;

        var result = new List<Message>();

        try
        {

            string stm = "SELECT uzenet_id, users_id, uzenet, datum, ervenyesseg FROM UZENET where uzenet_id=@_uzenet_id";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            for (int i = 0; i < msg_ids.Count; i++)
            {
                cmd.Parameters.Clear();
                cmd.Parameters.AddWithValue("@_uzenet_id", msg_ids[i]);
                rdr = cmd.ExecuteReader();

                Message row = new Message();

                while (rdr.Read())
                {
                    row.Uzenet_id = rdr.GetInt32(0);
                    row.Kuldo = rdr.GetInt32(1);
                    row.Uzenet = rdr.GetString(2);
                    row.Datum = rdr.GetString(3);
                    row.Ervenyesseg = rdr.GetString(4);
                }
                result.Add(row);
                rdr.Close();
            } 

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
    }


    internal Message getMsg(int uzenet_id)
    {
        MySqlDataReader rdr = null;

        var result = new Message();

        try
        {

            string stm = "SELECT uzenet_id, users_id, uzenet, datum, ervenyesseg FROM UZENET where uzenet_id=@_uzenet_id";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            cmd.Parameters.AddWithValue("@_uzenet_id", uzenet_id);

            rdr = cmd.ExecuteReader();



            while (rdr.Read())
            {
                result.Uzenet_id = rdr.GetInt32(0);
                result.Kuldo = rdr.GetInt32(1);
                result.Uzenet = rdr.GetString(2);
                result.Datum = rdr.GetString(3);
                result.Ervenyesseg = rdr.GetString(4);
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;

    }


    internal bool sendMsg(int sender, string uzenet, string datum, string ervenyesseg, List<int> cimzettek)
    {
        bool ok = false;

    // uzenet adatbazisba toltese
        string strSQL = "INSERT INTO UZENET (users_id, uzenet, datum, ervenyesseg) " +
        "VALUES (@_users_id, @_uzenet, @_datum, @_ervenyesseg); ";

        // Add query text
        MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();

        // Add parameter
        cmd.Parameters.AddWithValue("@_users_id", sender.ToString());
        cmd.Parameters.AddWithValue("@_uzenet", uzenet.ToString());
        cmd.Parameters.AddWithValue("@_datum", datum.ToString());
        cmd.Parameters.AddWithValue("@_ervenyesseg", ervenyesseg.ToString());

        // Execute query
        if (cmd.ExecuteNonQuery() == 1)
        {
            ok = true;
        }
        else 
        {
            return false; 
        }


    // feltoltott uzenet id-janak lekerdezese
        MySqlDataReader rdr = null;

        int result = 0;

        try
        {
            string stm = "SELECT uzenet_id FROM UZENET where users_id=@_users_id AND uzenet=@_uzenet AND datum=@_datum AND ervenyesseg=@_ervenyesseg";

            cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            cmd.Parameters.AddWithValue("@_users_id", sender.ToString());
            cmd.Parameters.AddWithValue("@_uzenet", uzenet.ToString());
            cmd.Parameters.AddWithValue("@_datum", datum.ToString());
            cmd.Parameters.AddWithValue("@_ervenyesseg", ervenyesseg.ToString());

            rdr = cmd.ExecuteReader();



            while (rdr.Read())
            {
                result = rdr.GetInt32(0);
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

    //cimzettek feltoltese a megkapott uzenet id-val

        // Query string 
        strSQL = "INSERT INTO FOGADOTT_UZENET (uzenet_id, users_id) VALUES (@_uzenet_id, @_users_id); ";

        // Add query text
        cmd = new MySqlCommand(strSQL, this.Conn);

        // Prepare the query
        cmd.Prepare();

        // Add parameter
        for (int i = 0; i < cimzettek.Count; i++)
        {
            cmd.Parameters.AddWithValue("@_uzenet_id", result.ToString());
            cmd.Parameters.AddWithValue("@_users_id", cimzettek[i].ToString());
            // Execute query
            if (cmd.ExecuteNonQuery() == 1)
            {
                ok = true;
            }
            else
            {
                return false;
            }
        }

        return ok;
    }


    
    internal List<KeyValuePair<int, KeyValuePair<string, int> > > getAllInstrument()
    {
        // hangszer_id, hangszer_nev, hangszertipus_id
        MySqlDataReader rdr = null;

        // hangszer_id, hangszer_nev, hangszertipus_id
        var result = new List<KeyValuePair<int, KeyValuePair<string, int> > >();

        try
        {

            // hangszerek listajanak lekerdezese az adatbazisbol
            string stm = "SELECT hangszer_id, hangszer_nev, hangszertipus_id FROM HANGSZER ORDER BY hangszer_id ASC";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                int hangszer_id= rdr.GetInt32(0);
                string hangszer_nev = rdr.GetString(1);
                int tipus_id = rdr.GetInt32(2);

                result.Add(new KeyValuePair<int, KeyValuePair<string, int> >(hangszer_id, new KeyValuePair<string, int>(hangszer_nev, tipus_id) ) );
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
    }


    internal List<KeyValuePair<int, string>> getAllInstrumentType()
    {
        MySqlDataReader rdr = null;

        var result = new List<KeyValuePair<int, string>>();

        try
        {

            string stm = "SELECT hangszertipus_id, hangszertipus_nev FROM HANGSZERTIPUS ORDER BY hangszertipus_id ASC";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                int key = rdr.GetInt32(0);
                string value = rdr.GetString(1);

                result.Add(new KeyValuePair<int, string>(key, value));
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
    }


    internal List<int> getPaperListdata(List<KeyValuePair<int, string>> hangszerek) 
    {

        MySqlDataReader rdr = null;

        var result = new List<int>();

        try
        {

            // user adatok lekerdezese

            string stm = "SELECT szolam_id FROM SZOLAM where hangszer_id=@_hangszer_id";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();
            
            for (int i=0; i<hangszerek.Count; i++) 
            {
                cmd.Parameters.AddWithValue("@_hangszer_id", hangszerek[i].Key);
                rdr = cmd.ExecuteReader();
                
                while (rdr.Read())
                {
                    result.Add(rdr.GetInt32(0));
                }

            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;

    }

    internal List<int> getAllPiecedata()
    {
        MySqlDataReader rdr = null;

        var result = new List<int>();

        try
        {

            // szólamok listajanak lekerdezese az adatbazisbol
            string stm = "SELECT darab_id FROM DARAB ORDER BY darab_id ASC";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                result.Add(rdr.GetInt32(0));
            }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
    }


    internal bool delPiecedata(int darab_id)
    {

        try
        {
            // Query string 
            string strSQL = "DELETE FROM DARAB WHERE darab_id=@_darab_id;";

            // Add query text
            MySqlCommand cmd = new MySqlCommand(strSQL, this.Conn);

            // Prepare the query
            cmd.Prepare();

            // Add parameter
            cmd.Parameters.AddWithValue("@_darab_id", darab_id);

            // Execute query
            if (cmd.ExecuteNonQuery() != 1)
            {
                return false;
            }

        }

        catch (MySqlException ex)
        {
            Console.WriteLine("MySQL error. Number: " + ex.Number);
        }

        return true;
    }

    
    internal int getCountPieces()
    {
        MySqlDataReader rdr = null;

        int result = -1;

        try
        {

            // user adatok lekerdezese

            string stm = "SELECT COUNT(darab_id) FROM DARAB";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            rdr = cmd.ExecuteReader();



            while (rdr.Read())
            {
                result = rdr.GetInt32(0);
            }


        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
    }

    internal List<int> getAllConcertdata()
    {

        MySqlDataReader rdr = null;

        var result = new List<int>();

        try
        {

            // koncertek listajanak lekerdezese az adatbazisbol
            string stm = "SELECT koncert_id FROM KONCERT ORDER BY koncert_id ASC";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                result.Add(rdr.GetInt32(0));
                }

        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
    }

    internal List<int> getAllActiveRehearsalMaterialdata()
    {
        MySqlDataReader rdr = null;

        var result = new List<int>();

        try
        {

            // probaanyag adatok lekerdezese
            string stm = "SELECT probaanyag_id FROM PROBAANYAG where probaanyag_aktiv=true";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            cmd.Prepare();

            rdr = cmd.ExecuteReader();



            while (rdr.Read())
            {
                result.Add(rdr.GetInt32(0));
            }


        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
    }

    public List<int> getAllRehearsaldata() 
    {
        MySqlDataReader rdr = null;

        var result = new List<int>();

        try
        {

            // koncertek listajanak lekerdezese az adatbazisbol
            string stm = "SELECT proba_id FROM PROBA ORDER BY proba_id ASC";

            MySqlCommand cmd = new MySqlCommand(stm, this.Conn);

            rdr = cmd.ExecuteReader();

            while (rdr.Read())
            {
                result.Add(rdr.GetInt32(0));
            }

    }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error: {0}", ex.ToString());

        }
        finally
        {
            if (rdr != null)
            {
                rdr.Close();
            }

        }

        // Return with the result string
        return result;
    }

}

